#version 330 core

in vec3 Normal;
in vec3 FragPos;

out vec4 color;

void main()
{

vec3 objectColor;

	if(gl_FrontFacing)
	{
		objectColor = vec3(0.9, 0.5, 0.0);
	}
		
	else
	{
		objectColor = vec3(0.18, 0.65, 1.0);
	}
		

	float ambientStrength = 0.1;
	vec3 lightColor = vec3(1.0, 1.0, 1.0);
	//vec3 objectColor = vec3(0.9, 0.5, 0.0);
	vec3 lightPos = vec3(500.0, 500.0, 0.0);
	vec3 norm = abs(normalize(Normal));
	vec3 lightDir = normalize(lightPos - FragPos);

	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;


    vec3 ambient = ambientStrength * lightColor;
	 vec3 result = (ambient + diffuse) * objectColor;

	
	color = vec4(result, 1.0);



		//if(result.x == 0 && result.y == 0 && result.z == 0)
		//color = vec4(objectColor, 1.0);
	//else

	//debug normals
	//color = vec4(abs(Normal.x), abs(Normal.y), abs(Normal.z), 1.0);

/////////////////////////
//   color = vec4(1.0f * abs(Normal.x), 1.0f * abs(Normal.y), 1.0f * abs(Normal.z), 1.0f);

}